<Window x:Class="NetTally.GlobalOptionsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NetTally"
        mc:Ignorable="d"
        Title="Global Options" Height="480" Width="640" ResizeMode="NoResize" WindowStartupLocation="CenterOwner" Icon="CheckVoteWin.ico" ShowInTaskbar="False">

    <Window.Resources>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></local:BoolToVisibilityConverter>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="6*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="90" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" x:Name="windowDescription" Margin="10,10,10,0" TextWrapping="Wrap"
                   Text="The following are options that change how the program works, at a mechanical level.  Most of the time you should leave them at the default, but occasionally situations may arise that require adjustments to the parsing behavior.  This allows you to make those adjustments when needed, with the understanding that it may cause extra work on the back-end of things, with merging votes and voters." VerticalAlignment="Top"/>

        <Label x:Name="labelGeneral" Content="General" HorizontalAlignment="Left" Margin="10,2,0,0" Grid.Row="1" Height="26" VerticalAlignment="Top"/>
        <CheckBox Grid.Column="0" Grid.Row="1" x:Name="allowRankedVotes" Content="Allow Ranked Votes" HorizontalAlignment="Left" Margin="10,28,0,0" VerticalAlignment="Top"
                  IsChecked="{Binding Path=AllowRankedVotes}" />

        <Label x:Name="labelFormatting" Content="Formatting" HorizontalAlignment="Left" Margin="10,49,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="-0.605,0.231"/>
        <CheckBox x:Name="forbidVoteLabelPlanNames" Content="Forbid Vote Label Plan Names" HorizontalAlignment="Left" Margin="10,75,0,0" Grid.Row="1" VerticalAlignment="Top"
                  IsChecked="{Binding Path=ForbidVoteLabelPlanNames}"/>
        <CheckBox Grid.Column="0" Grid.Row="1" x:Name="whitespaceAndPunctuationIsSignificant" Content="Whitespace &amp; Punctuation is Significant" HorizontalAlignment="Left" Margin="10,96,0,0" VerticalAlignment="Top"
                  IsChecked="{Binding Path=WhitespaceAndPunctuationIsSignificant}" />
        <CheckBox x:Name="disableProxyVotes" Content="Disable User Proxy Votes" HorizontalAlignment="Left" Margin="10,117,0,0" Grid.Row="1" VerticalAlignment="Top"
                  IsChecked="{Binding Path=DisableProxyVotes}"/>
        <CheckBox Grid.Column="0" Grid.Row="1" x:Name="ignoreSpoilers" Content="Ignore Spoilers" HorizontalAlignment="Left" Margin="10,138,0,0" VerticalAlignment="Top"
                  IsChecked="{Binding Path=IgnoreSpoilers}" />
        <CheckBox Grid.Column="0" Grid.Row="1" x:Name="trimExtendedText" Content="Trim Extended Vote Descriptions" HorizontalAlignment="Left" Margin="10,159,0,0" VerticalAlignment="Top"
                  IsChecked="{Binding Path=TrimExtendedText}" />

        <Label x:Name="labelOutput" Content="Output" HorizontalAlignment="Left" Margin="10,180,0,0" Grid.Row="1" VerticalAlignment="Top"/>
        <CheckBox x:Name="globalSpoilers" Content="Always Use Full Spoilers" HorizontalAlignment="Left" Margin="10,206,0,0" Grid.Row="1" VerticalAlignment="Top"
                  IsChecked="{Binding Path=GlobalSpoilers}"/>

        <Label x:Name="labelMisc" Content="Misc" HorizontalAlignment="Left" Margin="10,227,0,0" Grid.Row="1" VerticalAlignment="Top"/>
        <CheckBox Grid.Column="0" Grid.Row="1" x:Name="debugMode" Content="Debug Mode" HorizontalAlignment="Left" Margin="10,253,0,0" VerticalAlignment="Top"
                  IsChecked="{Binding Path=DebugMode}" />

        <!-- External Tooltip Descriptions -->
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=allowRankedVotes, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Allow Ranked Votes"/>
            <TextBlock TextWrapping="Wrap" Text="When set, this allows ranked votes to be tallied.  If ranked votes are interfering with your tally, you can turn it off here."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to true."/>
        </StackPanel>

        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=forbidVoteLabelPlanNames, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Forbid Vote Labels as Plan Names"/>
            <TextBlock TextWrapping="Wrap" Text="When set, votes that have a 'plan' line (which has no content) as the first line of the vote, ignore that as a means of giving the entire vote a plan name."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to false."/>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=whitespaceAndPunctuationIsSignificant, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Whitespace &amp; Punctuation is Significant"/>
            <TextBlock TextWrapping="Wrap" Text="When set, this makes it so that whitespace and punctuation is significant when comparing votes and voters.  Enable it if votes that should be considered separate are being treated as the same."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to false."/>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=disableProxyVotes, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Disable User Proxy Votes"/>
            <TextBlock TextWrapping="Wrap" Text="When set, user proxy votes (votes for another user, in order to import their vote into your own) are disabled.  This allows valid votes that happened to be the same as another user's name to be properly counted."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to false."/>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=ignoreSpoilers, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Ignore Spoilers"/>
            <TextBlock TextWrapping="Wrap" Text="When set, this ignores spoiler blocks within posts.  Content within spoilers will not be tallied, and tally results inside spoilers will not cause the entire post to be ignored."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to false."/>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=trimExtendedText, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Trim Extended Vote Descriptions"/>
            <TextBlock TextWrapping="Wrap" Text="When set, the program will attempt to trim excess text from long text line, if there's a punctuation separator (colon, em dash, or hyphen) that it recognizes in an appropriate spot (less than 30% of the full string length, and not inside parentheses)."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Experimental."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to false."/>
        </StackPanel>

        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=globalSpoilers, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Always Use Full Spoilers"/>
            <TextBlock TextWrapping="Wrap" Text="When set, all display modes will be placed inside a full spoiler block (similar to Spoiler All).  This does not affect whether voter lists are placed in spoilers."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="Defaults to false."/>
        </StackPanel>

        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,5,0" Visibility="{Binding ElementName=debugMode, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
            <TextBlock TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,5" Text="Debug Mode"/>
            <TextBlock TextWrapping="Wrap" Text="When set, tallies combine the post author with the post ID.  This allows you to tally votes from the same person across multiple posts, and ignores the thread author exception."/>
            <TextBlock TextWrapping="Wrap" Margin="0,5,0,0" Text="This always resets to false on program startup."/>
        </StackPanel>

        <Button Grid.Column="0" Grid.Row="2" x:Name="resetAllButton" Content="Reset All" Margin="10,0,0,10" Width="100" Height="32"
                HorizontalAlignment="Left" VerticalAlignment="Bottom" Click="resetAllButton_Click">
            <Button.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold">Reset All Options</TextBlock>
                        <TextBlock>Reset all options to their default values.</TextBlock>
                    </StackPanel>
                </ToolTip>
            </Button.ToolTip>
        </Button>
        <Button Grid.Column="1" Grid.Row="2" x:Name="closeButton" Content="Close" Margin="0,0,10,10" Width="100" Height="32"
                HorizontalAlignment="Right" VerticalAlignment="Bottom" IsDefault="True" IsCancel="True" Click="closeButton_Click">
            <Button.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold">Close Window</TextBlock>
                        <TextBlock>Close the window, accepting the currently selected options.</TextBlock>
                    </StackPanel>
                </ToolTip>
            </Button.ToolTip>
        </Button>

    </Grid>
</Window>
